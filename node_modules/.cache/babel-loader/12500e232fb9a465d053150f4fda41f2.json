{"ast":null,"code":"var _jsxFileName = \"/Users/arorashivoy/Programs/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => this.props.onClick(),\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WonSquare extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"won-square\",\n      onClick: () => this.props.onClick(),\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    if (this.props.wonSquares.includes(i)) {\n      return /*#__PURE__*/_jsxDEV(WonSquare, {\n        value: this.props.squares[i],\n        onClick: () => this.props.onClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: this.props.squares[i],\n        onClick: () => this.props.onClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    let boardRows = [];\n\n    for (let row = 0; row < 3; row++) {\n      let boardCols = [];\n\n      for (let col = 0; col < 3; col++) {\n        boardCols.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.renderSquare(row * 3 + col)\n        }, row * 3 + col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this));\n      }\n\n      ;\n      boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: boardCols\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: boardRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      wonSquares: Array(3).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares)[0] || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  checkNoNull(arr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (!arr[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      let col, row;\n\n      if (move !== 0) {\n        for (let i = 0; i < 9; i++) {\n          if (this.state.history[move - 1].squares[i] !== step.squares[i]) {\n            col = Math.floor(i / 3);\n            row = i - 3 * col;\n          }\n        }\n\n        ;\n      }\n\n      ;\n      const desc = move ? 'Go to move #' + move + ' (' + (col + 1) + ', ' + (row + 1) + \")\" : 'Go to game start';\n\n      if (move === this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this);\n      }\n\n      ;\n    });\n    const noNull = this.checkNoNull(current.squares);\n    let status;\n\n    if (winner[0]) {\n      status = 'Winner: ' + winner[0];\n      this.setState({\n        wonSquares: winner[1]\n      });\n    } else if (noNull) {\n      status = 'It is a DRAW';\n    } else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          wonSquares: this.state.wonSquares\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[b] === squares[c] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n\n  return [null, null];\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 209,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/arorashivoy/Programs/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","Component","render","props","onClick","value","WonSquare","Board","renderSquare","i","wonSquares","includes","squares","boardRows","row","boardCols","col","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","checkNoNull","arr","winner","moves","map","move","Math","floor","desc","noNull","status","lines","a","b","c","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,OAAX,EAFjB;AAAA,gBAIG,KAAKD,KAAL,CAAWE;AAJd;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAVkC;;AAarC,MAAMC,SAAN,SAAwBR,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,OAAX,EAFjB;AAAA,gBAIG,KAAKD,KAAL,CAAWE;AAJd;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAVqC;;AAcxC,MAAME,KAAN,SAAoBT,KAAK,CAACG,SAA1B,CAAoC;AAClCO,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,QAAI,KAAKN,KAAL,CAAWO,UAAX,CAAsBC,QAAtB,CAA+BF,CAA/B,CAAJ,EAAuC;AACrC,0BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWS,OAAX,CAAmBH,CAAnB,CADT;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB;AAFjB;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,MAQK;AACH,0BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWS,OAAX,CAAmBH,CAAnB,CADT;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB;AAFjB;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAEDP,EAAAA,MAAM,GAAG;AACP,QAAIW,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAiC;AAC/BD,QAAAA,SAAS,CAACE,IAAV,eAAe;AAAA,oBAAyB,KAAKT,YAAL,CAAmBM,GAAG,GAAC,CAAL,GAAQE,GAA1B;AAAzB,WAAYF,GAAG,GAAC,CAAL,GAAQE,GAAnB;AAAA;AAAA;AAAA;AAAA,gBAAf;AACD;;AAAA;AACDH,MAAAA,SAAS,CAACI,IAAV,eAAe;AAAA,kBAAgBF;AAAhB,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,cAAf;AACD;;AAED,wBACE;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnCiC;;AAsCpC,MAAMK,IAAN,SAAmBpB,KAAK,CAACG,SAAzB,CAAmC;AACjCkB,EAAAA,WAAW,CAAChB,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKiB,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC;AACRT,QAAAA,OAAO,EAAEU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADE;AAIXC,MAAAA,UAAU,EAAE,CAJD;AAKXC,MAAAA,OAAO,EAAE,IALE;AAMXf,MAAAA,UAAU,EAAEY,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AAND,KAAb;AAQD;;AAEDG,EAAAA,WAAW,CAACjB,CAAD,EAAI;AACb,UAAMY,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAyB,CAAzB,EAA4B,KAAKP,KAAL,CAAWI,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMI,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMjB,OAAO,GAAGgB,OAAO,CAAChB,OAAR,CAAgBe,KAAhB,EAAhB;;AAEA,QAAIG,eAAe,CAAClB,OAAD,CAAf,CAAyB,CAAzB,KAA+BA,OAAO,CAACH,CAAD,CAA1C,EAA+C;AAC7C;AACD;;AAEDG,IAAAA,OAAO,CAACH,CAAD,CAAP,GAAa,KAAKW,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAAtC;AACA,SAAKM,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAe,CAAC;AACvBpB,QAAAA,OAAO,EAAEA;AADc,OAAD,CAAf,CADG;AAIZY,MAAAA,UAAU,EAAEH,OAAO,CAACQ,MAJR;AAKZJ,MAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AALT,KAAd;AAOD;;AAEDQ,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAKH,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAEU,IADA;AAEZT,MAAAA,OAAO,EAAGS,IAAI,GAAC,CAAN,KAAa;AAFV,KAAd;AAID;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,GAAG,CAACP,MAAxB,EAAgCpB,CAAC,EAAjC,EAAqC;AACnC,UAAI,CAAC2B,GAAG,CAAC3B,CAAD,CAAR,EAAa;AACX,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;;AAEDP,EAAAA,MAAM,GAAG;AACP,UAAMmB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAAC,KAAKD,KAAL,CAAWI,UAAZ,CAAvB;AACA,UAAMa,MAAM,GAAGP,eAAe,CAACF,OAAO,CAAChB,OAAT,CAA9B;AAEA,UAAM0B,KAAK,GAAGjB,OAAO,CAACkB,GAAR,CAAY,CAACL,IAAD,EAAQM,IAAR,KAAiB;AACzC,UAAIxB,GAAJ,EAASF,GAAT;;AACA,UAAI0B,IAAI,KAAK,CAAb,EAAe;AACb,aAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAI,KAAKW,KAAL,CAAWC,OAAX,CAAmBmB,IAAI,GAAC,CAAxB,EAA2B5B,OAA3B,CAAmCH,CAAnC,MAA0CyB,IAAI,CAACtB,OAAL,CAAaH,CAAb,CAA9C,EAA+D;AAC7DO,YAAAA,GAAG,GAAGyB,IAAI,CAACC,KAAL,CAAWjC,CAAC,GAAC,CAAb,CAAN;AACAK,YAAAA,GAAG,GAAGL,CAAC,GAAI,IAAEO,GAAb;AACD;AACF;;AAAA;AACF;;AAAA;AAED,YAAM2B,IAAI,GAAGH,IAAI,GACf,iBAAiBA,IAAjB,GAAwB,IAAxB,IAAgCxB,GAAG,GAAC,CAApC,IAAyC,IAAzC,IAAiDF,GAAG,GAAC,CAArD,IAA0D,GAD3C,GAEf,kBAFF;;AAIE,UAAI0B,IAAI,KAAK,KAAKpB,KAAL,CAAWI,UAAxB,EAAoC;AAClC,4BACE;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKS,MAAL,CAAYO,IAAZ,CAAvB;AAAA,mCAA0C;AAAA,wBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ,WAASH,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND,MAMO;AACL,4BACE;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKP,MAAL,CAAYO,IAAZ,CAAvB;AAAA,sBAA2CG;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ,WAASH,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AAAA;AACJ,KA5Ba,CAAd;AA8BA,UAAMI,MAAM,GAAG,KAAKT,WAAL,CAAiBP,OAAO,CAAChB,OAAzB,CAAf;AACA,QAAIiC,MAAJ;;AACA,QAAIR,MAAM,CAAC,CAAD,CAAV,EAAe;AACbQ,MAAAA,MAAM,GAAG,aAAaR,MAAM,CAAC,CAAD,CAA5B;AACA,WAAKN,QAAL,CAAc;AACZrB,QAAAA,UAAU,EAAE2B,MAAM,CAAC,CAAD;AADN,OAAd;AAGD,KALD,MAMK,IAAIO,MAAJ,EAAY;AACfC,MAAAA,MAAM,GAAG,cAAT;AACD,KAFI,MAGA;AACHA,MAAAA,MAAM,GAAG,mBAAmB,KAAKzB,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAA5C,CAAT;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBoB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAEjB,OAAO,CAAChB,OADnB;AAEE,UAAA,OAAO,EAAGH,CAAD,IAAO,KAAKiB,WAAL,CAAiBjB,CAAjB,CAFlB;AAGE,UAAA,UAAU,EAAE,KAAKW,KAAL,CAAWV;AAHzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAA,sBAAK4B;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAjHgC;;AAoHnC,SAASR,eAAT,CAAyBlB,OAAzB,EAAkC;AAChC,QAAMkC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqC,KAAK,CAACjB,MAA1B,EAAkCpB,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACsC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,KAAK,CAACrC,CAAD,CAAvB;;AACA,QAAIG,OAAO,CAACoC,CAAD,CAAP,KAAepC,OAAO,CAACqC,CAAD,CAAtB,IAA6BrC,OAAO,CAACmC,CAAD,CAAP,KAAenC,OAAO,CAACoC,CAAD,CAAnD,IAA0DpC,OAAO,CAACmC,CAAD,CAAP,KAAenC,OAAO,CAACqC,CAAD,CAApF,EAAyF;AACvF,aAAO,CAACrC,OAAO,CAACmC,CAAD,CAAR,EAAaD,KAAK,CAACrC,CAAD,CAAlB,CAAP;AACD;AACF;;AACD,SAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD,C,CAED;;;AAEAV,QAAQ,CAACG,MAAT,eACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEgD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n  render() {\n    return (\n      <button \n        className=\"square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass WonSquare extends React.Component {\n  render() {\n    return (\n      <button \n        className=\"won-square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\n  \nclass Board extends React.Component {\n  renderSquare(i) {\n    if (this.props.wonSquares.includes(i)) {\n      return (\n        <WonSquare\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n    else {\n      return (\n        <Square \n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  }\n\n  render() {\n    let boardRows = [];\n    for (let row = 0; row < 3; row++) {\n      let boardCols = [];\n      for (let col = 0; col < 3; col++){\n        boardCols.push(<span key={(row*3)+col}>{this.renderSquare((row*3)+col)}</span>);\n      };\n      boardRows.push(<div key={row}>{boardCols}</div>);\n    }\n\n    return (\n      <div>\n        {boardRows}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      wonSquares: Array(3).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares)[0] || squares[i]) {\n      return ;\n    }\n    \n    squares[i] = this.state.xIsNext ? \"X\":\"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) === 0,\n    });\n  }\n\n  checkNoNull(arr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (!arr[i]) {\n        return false\n      }\n    }\n    return true\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step,  move) => {\n      let col, row;\n      if (move !== 0){\n        for (let i = 0; i < 9; i++) {\n          if (this.state.history[move-1].squares[i] !== step.squares[i]) {\n            col = Math.floor(i/3) \n            row = i - (3*col)\n          }\n        };\n      };\n\n      const desc = move ?\n        'Go to move #' + move + ' (' + (col+1) + ', ' + (row+1) + \")\":\n        'Go to game start';\n      \n        if (move === this.state.stepNumber) {\n          return (\n            <li key={move}>\n                <button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n            </li>\n          )\n        } else {\n          return (\n            <li key={move}>\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\n            </li>\n          )\n        };\n    });\n\n    const noNull = this.checkNoNull(current.squares)\n    let status;\n    if (winner[0]) {\n      status = 'Winner: ' + winner[0];\n      this.setState({\n        wonSquares: winner[1]\n      });\n    }\n    else if (noNull) {\n      status = 'It is a DRAW'\n    }\n    else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X':'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"status\">{status}</div>\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            wonSquares={this.state.wonSquares}\n          />\n          <div className=\"game-info\">\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[b] === squares[c] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n  return [null, null];\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}