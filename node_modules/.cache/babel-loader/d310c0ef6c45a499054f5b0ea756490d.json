{"ast":null,"code":"var _jsxFileName = \"/Users/arorashivoy/Programs/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => this.props.onClick(),\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WonSquare extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"won-square\",\n      onClick: () => this.props.onClick(),\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    let boardRows = [];\n\n    for (let row = 0; row < 3; row++) {\n      let boardCols = [];\n\n      for (let col = 0; col < 3; col++) {\n        boardCols.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.renderSquare(row * 3 + col)\n        }, row * 3 + col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this));\n      }\n\n      ;\n      boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: boardCols\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: boardRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      wonSquares\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  checkNoNull(arr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (!arr[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      let col, row;\n\n      if (move !== 0) {\n        for (let i = 0; i < 9; i++) {\n          if (this.state.history[move - 1].squares[i] !== step.squares[i]) {\n            col = Math.floor(i / 3);\n            row = i - 3 * col;\n          }\n        }\n\n        ;\n      }\n\n      ;\n      const desc = move ? 'Go to move #' + move + ' (' + (col + 1) + ', ' + (row + 1) + \")\" : 'Go to game start';\n\n      if (move === this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this);\n      }\n\n      ;\n    });\n    const noNull = this.checkNoNull(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (noNull) {\n      status = 'It is a DRAW';\n    } else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[b] === squares[c] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 195,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/arorashivoy/Programs/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","Component","render","props","onClick","value","WonSquare","Board","renderSquare","i","squares","boardRows","row","boardCols","col","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","wonSquares","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","checkNoNull","arr","winner","moves","map","move","Math","floor","desc","noNull","status","lines","a","b","c","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,OAAX,EAFjB;AAAA,gBAIG,KAAKD,KAAL,CAAWE;AAJd;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAVkC;;AAarC,MAAMC,SAAN,SAAwBR,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,OAAX,EAFjB;AAAA,gBAIG,KAAKD,KAAL,CAAWE;AAJd;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAVqC;;AAcxC,MAAME,KAAN,SAAoBT,KAAK,CAACG,SAA1B,CAAoC;AAClCO,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,wBACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,CAAnB,CADT;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB;AAFjB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDP,EAAAA,MAAM,GAAG;AACP,QAAIS,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAiC;AAC/BD,QAAAA,SAAS,CAACE,IAAV,eAAe;AAAA,oBAAyB,KAAKP,YAAL,CAAmBI,GAAG,GAAC,CAAL,GAAQE,GAA1B;AAAzB,WAAYF,GAAG,GAAC,CAAL,GAAQE,GAAnB;AAAA;AAAA;AAAA;AAAA,gBAAf;AACD;;AAAA;AACDH,MAAAA,SAAS,CAACI,IAAV,eAAe;AAAA,kBAAgBF;AAAhB,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,cAAf;AACD;;AAED,wBACE;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzBiC;;AA4BpC,MAAMK,IAAN,SAAmBlB,KAAK,CAACG,SAAzB,CAAmC;AACjCgB,EAAAA,WAAW,CAACd,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKe,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC;AACRT,QAAAA,OAAO,EAAEU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADE;AAIXC,MAAAA,UAAU,EAAE,CAJD;AAKXC,MAAAA,OAAO,EAAE,IALE;AAMXC,MAAAA;AANW,KAAb;AAQD;;AAEDC,EAAAA,WAAW,CAAChB,CAAD,EAAI;AACb,UAAMU,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBO,KAAnB,CAAyB,CAAzB,EAA4B,KAAKR,KAAL,CAAWI,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMK,OAAO,GAAGR,OAAO,CAACA,OAAO,CAACS,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMlB,OAAO,GAAGiB,OAAO,CAACjB,OAAR,CAAgBgB,KAAhB,EAAhB;;AAEA,QAAIG,eAAe,CAACnB,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AAEDC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKS,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAAtC;AACA,SAAKO,QAAL,CAAc;AACZX,MAAAA,OAAO,EAAEA,OAAO,CAACY,MAAR,CAAe,CAAC;AACvBrB,QAAAA,OAAO,EAAEA;AADc,OAAD,CAAf,CADG;AAIZY,MAAAA,UAAU,EAAEH,OAAO,CAACS,MAJR;AAKZL,MAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AALT,KAAd;AAOD;;AAEDS,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAKH,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAEW,IADA;AAEZV,MAAAA,OAAO,EAAGU,IAAI,GAAC,CAAN,KAAa;AAFV,KAAd;AAID;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,SAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,GAAG,CAACP,MAAxB,EAAgCnB,CAAC,EAAjC,EAAqC;AACnC,UAAI,CAAC0B,GAAG,CAAC1B,CAAD,CAAR,EAAa;AACX,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;;AAEDP,EAAAA,MAAM,GAAG;AACP,UAAMiB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMQ,OAAO,GAAGR,OAAO,CAAC,KAAKD,KAAL,CAAWI,UAAZ,CAAvB;AACA,UAAMc,MAAM,GAAGP,eAAe,CAACF,OAAO,CAACjB,OAAT,CAA9B;AAEA,UAAM2B,KAAK,GAAGlB,OAAO,CAACmB,GAAR,CAAY,CAACL,IAAD,EAAQM,IAAR,KAAiB;AACzC,UAAIzB,GAAJ,EAASF,GAAT;;AACA,UAAI2B,IAAI,KAAK,CAAb,EAAe;AACb,aAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAI,KAAKS,KAAL,CAAWC,OAAX,CAAmBoB,IAAI,GAAC,CAAxB,EAA2B7B,OAA3B,CAAmCD,CAAnC,MAA0CwB,IAAI,CAACvB,OAAL,CAAaD,CAAb,CAA9C,EAA+D;AAC7DK,YAAAA,GAAG,GAAG0B,IAAI,CAACC,KAAL,CAAWhC,CAAC,GAAC,CAAb,CAAN;AACAG,YAAAA,GAAG,GAAGH,CAAC,GAAI,IAAEK,GAAb;AACD;AACF;;AAAA;AACF;;AAAA;AAED,YAAM4B,IAAI,GAAGH,IAAI,GACf,iBAAiBA,IAAjB,GAAwB,IAAxB,IAAgCzB,GAAG,GAAC,CAApC,IAAyC,IAAzC,IAAiDF,GAAG,GAAC,CAArD,IAA0D,GAD3C,GAEf,kBAFF;;AAIE,UAAI2B,IAAI,KAAK,KAAKrB,KAAL,CAAWI,UAAxB,EAAoC;AAClC,4BACE;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKU,MAAL,CAAYO,IAAZ,CAAvB;AAAA,mCAA0C;AAAA,wBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ,WAASH,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND,MAMO;AACL,4BACE;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKP,MAAL,CAAYO,IAAZ,CAAvB;AAAA,sBAA2CG;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ,WAASH,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AAAA;AACJ,KA5Ba,CAAd;AA8BA,UAAMI,MAAM,GAAG,KAAKT,WAAL,CAAiBP,OAAO,CAACjB,OAAzB,CAAf;AACA,QAAIkC,MAAJ;;AACA,QAAIR,MAAJ,EAAY;AACVQ,MAAAA,MAAM,GAAG,aAAaR,MAAtB;AACD,KAFD,MAGK,IAAIO,MAAJ,EAAY;AACfC,MAAAA,MAAM,GAAG,cAAT;AACD,KAFI,MAGA;AACHA,MAAAA,MAAM,GAAG,mBAAmB,KAAK1B,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAA5C,CAAT;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBqB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAEjB,OAAO,CAACjB,OADnB;AAEE,UAAA,OAAO,EAAGD,CAAD,IAAO,KAAKgB,WAAL,CAAiBhB,CAAjB;AAFlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAA,sBAAK4B;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA7GgC;;AAgHnC,SAASR,eAAT,CAAyBnB,OAAzB,EAAkC;AAChC,QAAMmC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoC,KAAK,CAACjB,MAA1B,EAAkCnB,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACqC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,KAAK,CAACpC,CAAD,CAAvB;;AACA,QAAIC,OAAO,CAACqC,CAAD,CAAP,KAAerC,OAAO,CAACsC,CAAD,CAAtB,IAA6BtC,OAAO,CAACoC,CAAD,CAAP,KAAepC,OAAO,CAACqC,CAAD,CAAnD,IAA0DrC,OAAO,CAACoC,CAAD,CAAP,KAAepC,OAAO,CAACsC,CAAD,CAApF,EAAyF;AACvF,aAAOtC,OAAO,CAACoC,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD,C,CAED;;;AAEA/C,QAAQ,CAACG,MAAT,eACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEE+C,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n  render() {\n    return (\n      <button \n        className=\"square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass WonSquare extends React.Component {\n  render() {\n    return (\n      <button \n        className=\"won-square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\n  \nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    let boardRows = [];\n    for (let row = 0; row < 3; row++) {\n      let boardCols = [];\n      for (let col = 0; col < 3; col++){\n        boardCols.push(<span key={(row*3)+col}>{this.renderSquare((row*3)+col)}</span>);\n      };\n      boardRows.push(<div key={row}>{boardCols}</div>);\n    }\n\n    return (\n      <div>\n        {boardRows}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      wonSquares\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return ;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\":\"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) === 0,\n    });\n  }\n\n  checkNoNull(arr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (!arr[i]) {\n        return false\n      }\n    }\n    return true\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step,  move) => {\n      let col, row;\n      if (move !== 0){\n        for (let i = 0; i < 9; i++) {\n          if (this.state.history[move-1].squares[i] !== step.squares[i]) {\n            col = Math.floor(i/3) \n            row = i - (3*col)\n          }\n        };\n      };\n\n      const desc = move ?\n        'Go to move #' + move + ' (' + (col+1) + ', ' + (row+1) + \")\":\n        'Go to game start';\n      \n        if (move === this.state.stepNumber) {\n          return (\n            <li key={move}>\n                <button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n            </li>\n          )\n        } else {\n          return (\n            <li key={move}>\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\n            </li>\n          )\n        };\n    });\n\n    const noNull = this.checkNoNull(current.squares)\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    }\n    else if (noNull) {\n      status = 'It is a DRAW'\n    }\n    else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X':'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"status\">{status}</div>\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n          <div className=\"game-info\">\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[b] === squares[c] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}